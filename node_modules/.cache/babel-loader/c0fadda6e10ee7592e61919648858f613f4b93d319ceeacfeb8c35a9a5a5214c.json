{"ast":null,"code":"import EditIcon from'@mui/icons-material/Edit';import GpsFixedIcon from'@mui/icons-material/GpsFixed';import SettingsSuggestIcon from'@mui/icons-material/SettingsSuggest';import TerrainIcon from'@mui/icons-material/Terrain';import{FeatureCard}from'./FeatureCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function VoxelGameEngine(){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-black m-[5%]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-white font-bold text-4xl\",children:\"Voxel Game Engine\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-neutral-400 font-semibold text-lg\",children:\"A Minecraft-inspired voxel game written in C++ and using OpenGL.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-4\",children:[/*#__PURE__*/_jsx(FeatureCard,{title:\"Infinite Terrain\",text:\"Infinite procedurally generated terrain using perlin noise.\",img:/*#__PURE__*/_jsx(TerrainIcon,{style:{color:'white'}})}),/*#__PURE__*/_jsx(FeatureCard,{title:\"Break/Place Blocks\",text:\"Block placing and breaking mechanics using raycasting.\",img:/*#__PURE__*/_jsx(EditIcon,{style:{color:'white'}})}),/*#__PURE__*/_jsx(FeatureCard,{title:\"Chunk Management\",text:\"Chunk-based rendering system dynamically loads and unloads chunks nearby the player.\",img:/*#__PURE__*/_jsx(GpsFixedIcon,{style:{color:'white'}})}),/*#__PURE__*/_jsx(FeatureCard,{title:\"Performance Optimizations\",text:\"Techniques such as frustum culling and face culling enhance performance.\",img:/*#__PURE__*/_jsx(SettingsSuggestIcon,{style:{color:'white'}})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-neutral-500 bg-neutral-900 rounded-xl p-4 h-fit\",children:/*#__PURE__*/_jsx(\"img\",{src:require('../assets/voxelgameengine.png'),alt:\"Eater Enrollment screenshot\"})})]})});}","map":{"version":3,"names":["EditIcon","GpsFixedIcon","SettingsSuggestIcon","TerrainIcon","FeatureCard","jsx","_jsx","jsxs","_jsxs","VoxelGameEngine","className","children","title","text","img","style","color","src","require","alt"],"sources":["C:/Users/kevin/Documents/UCI/Personal/portfolio/src/components/VoxelGameEngine.jsx"],"sourcesContent":["import EditIcon from '@mui/icons-material/Edit';\r\nimport GpsFixedIcon from '@mui/icons-material/GpsFixed';\r\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\r\nimport TerrainIcon from '@mui/icons-material/Terrain';\r\nimport { FeatureCard } from './FeatureCard';\r\n\r\nexport function VoxelGameEngine() {\r\n    return (\r\n        <div className=\"bg-black m-[5%]\">\r\n            <div className=\"grid grid-cols-2\">\r\n                <div className=\"p-8\">\r\n                    <h2 className=\"text-white font-bold text-4xl\">\r\n                        Voxel Game Engine\r\n                    </h2>\r\n                    <span className=\"text-neutral-400 font-semibold text-lg\">\r\n                    A Minecraft-inspired voxel game written in C++ and using OpenGL.\r\n                    </span>\r\n                    <div className=\"flex flex-col gap-4\">\r\n                        <FeatureCard title=\"Infinite Terrain\" text=\"Infinite procedurally generated terrain using perlin noise.\" img={<TerrainIcon style={{ color: 'white' }}/>}/>\r\n                        <FeatureCard title=\"Break/Place Blocks\" text=\"Block placing and breaking mechanics using raycasting.\" img={<EditIcon style={{ color: 'white' }}/>}/>\r\n                        <FeatureCard title=\"Chunk Management\" text=\"Chunk-based rendering system dynamically loads and unloads chunks nearby the player.\" img={<GpsFixedIcon style={{ color: 'white' }}/>}/>\r\n                        <FeatureCard title=\"Performance Optimizations\" text=\"Techniques such as frustum culling and face culling enhance performance.\" img={<SettingsSuggestIcon style={{ color: 'white' }}/>}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"border border-neutral-500 bg-neutral-900 rounded-xl p-4 h-fit\">\r\n                    <img src={require('../assets/voxelgameengine.png')} alt=\"Eater Enrollment screenshot\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,0BAA0B,CAC/C,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,MAAO,CAAAC,mBAAmB,KAAM,qCAAqC,CACrE,MAAO,CAAAC,WAAW,KAAM,6BAA6B,CACrD,OAASC,WAAW,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,MAAO,SAAS,CAAAC,eAAeA,CAAA,CAAG,CAC9B,mBACIH,IAAA,QAAKI,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC5BH,KAAA,QAAKE,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BH,KAAA,QAAKE,SAAS,CAAC,KAAK,CAAAC,QAAA,eAChBL,IAAA,OAAII,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAAC,mBAE9C,CAAI,CAAC,cACLL,IAAA,SAAMI,SAAS,CAAC,wCAAwC,CAAAC,QAAA,CAAC,kEAEzD,CAAM,CAAC,cACPH,KAAA,QAAKE,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAChCL,IAAA,CAACF,WAAW,EAACQ,KAAK,CAAC,kBAAkB,CAACC,IAAI,CAAC,6DAA6D,CAACC,GAAG,cAAER,IAAA,CAACH,WAAW,EAACY,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,cAC1JV,IAAA,CAACF,WAAW,EAACQ,KAAK,CAAC,oBAAoB,CAACC,IAAI,CAAC,wDAAwD,CAACC,GAAG,cAAER,IAAA,CAACN,QAAQ,EAACe,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,cACpJV,IAAA,CAACF,WAAW,EAACQ,KAAK,CAAC,kBAAkB,CAACC,IAAI,CAAC,sFAAsF,CAACC,GAAG,cAAER,IAAA,CAACL,YAAY,EAACc,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,cACpLV,IAAA,CAACF,WAAW,EAACQ,KAAK,CAAC,2BAA2B,CAACC,IAAI,CAAC,0EAA0E,CAACC,GAAG,cAAER,IAAA,CAACJ,mBAAmB,EAACa,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,EACvL,CAAC,EACL,CAAC,cACNV,IAAA,QAAKI,SAAS,CAAC,+DAA+D,CAAAC,QAAA,cAC1EL,IAAA,QAAKW,GAAG,CAAEC,OAAO,CAAC,+BAA+B,CAAE,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAAC,CACtF,CAAC,EACL,CAAC,CACL,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}